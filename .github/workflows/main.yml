jobs:
  check-build-status:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Build Status from Azure DevOps
        env:
          AZURE_PAT: ${{ secrets.AZURE_PAT }} # Ensure PAT is set in secrets
        run: |
          # Make the API request and handle redirection
          BUILD_INFO=$(curl -s -L -u :$AZURE_PAT \
              "https://dev.azure.com/fwollo/QApp/_apis/build/builds?definitions=26&api-version=7.1-preview.7")

          # Display the response
          echo "$BUILD_INFO"

          # Check if any builds are found
          if echo "$BUILD_INFO" | jq -e '.value | length == 0' > /dev/null; then
              echo "No builds found"
              exit 1
          fi

          # Parse the necessary fields
          BUILD_ID=$(echo "$BUILD_INFO" | jq -r '.value[0].id // "ID not found"')
          STATUS=$(echo "$BUILD_INFO" | jq -r '.value[0].status // "Status not found"')
          RESULT=$(echo "$BUILD_INFO" | jq -r '.value[0].result // "Result not found"')
          QUEUE_TIME=$(echo "$BUILD_INFO" | jq -r '.value[0].queueTime // "Queue time not found"')
          FINISH_TIME=$(echo "$BUILD_INFO" | jq -r '.value[0].finishTime // "Finish time not found"')

          # Format the message
          MESSAGE="🛠 Build #$BUILD_ID\n🔹 Status: *$STATUS*\n🔹 Result: *$RESULT*\n⏳ Started at: *$QUEUE_TIME*\n⏳ Finish time: *$FINISH_TIME*"

          # Output the message to GitHub Actions
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV
          
          # Optionally, print the message for checking
          echo "$MESSAGE"

      - name: Send message to Telegram
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d parse_mode="Markdown" \
          -d text="${{ env.MESSAGE }}"

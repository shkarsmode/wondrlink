name: Check Build Status

on:
  workflow_dispatch:

jobs:
  check-build-status:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Build Status from Azure DevOps
        env:
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}    # Azure username
          AZURE_PAT: ${{ secrets.AZURE_PAT }}              # Personal Access Token
        run: |
          # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Azure DevOps API
          BUILD_INFO=$(curl -s -u "${AZURE_USERNAME}:${AZURE_PAT}" \
              "https://dev.azure.com/fwollo/QApp/_apis/build/builds?definitions=26&api-version=7.1-preview.7")

          # –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É
          echo "$BUILD_INFO"

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ
          if echo "$BUILD_INFO" | jq -e '.value | length == 0' > /dev/null; then
              echo "No builds found"
              exit 1
          fi

          # –ü–∞—Ä—Å–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è
          BUILD_ID=$(echo "$BUILD_INFO" | jq -r '.value[0].id // "ID not found"')
          STATUS=$(echo "$BUILD_INFO" | jq -r '.value[0].status // "Status not found"')
          RESULT=$(echo "$BUILD_INFO" | jq -r '.value[0].result // "Result not found"')
          QUEUE_TIME=$(echo "$BUILD_INFO" | jq -r '.value[0].queueTime // "Queue time not found"')
          FINISH_TIME=$(echo "$BUILD_INFO" | jq -r '.value[0].finishTime // "Finish time not found"')

          # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
          MESSAGE="üõ† Build #$BUILD_ID\nüîπ Status: *$STATUS*\nüîπ Result: *$RESULT*\n‚è≥ Started at: *$QUEUE_TIME*\n‚è≥ Finish time: *$FINISH_TIME*"
          
          # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ GitHub Actions
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV
          
          # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
          echo "$MESSAGE"
          
      - name: Send message to Telegram
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d parse_mode="Markdown" \
          -d text="${{ env.MESSAGE }}"
